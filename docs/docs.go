// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Shukurillo Karimov",
            "email": "gratefultolord@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/subscriptions": {
            "get": {
                "description": "Возвращает список подписок с пагинацией",
                "tags": [
                    "subscriptions"
                ],
                "summary": "Получить список подписок",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Количество элементов на странице (по умолчанию 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение (по умолчанию 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/response.SubscriptionListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerError"
                        }
                    }
                }
            }
        },
        "/subscriptions/create": {
            "post": {
                "description": "Добавляет информацию о подписке",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Добавить информацию о подписке",
                "parameters": [
                    {
                        "description": "Данные подписки",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/response.CreatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerError"
                        }
                    }
                }
            }
        },
        "/subscriptions/total": {
            "get": {
                "description": "Возвращает сумму всех подписок, опционально фильтруя по userId и serviceName",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Получить общую стоимость подписок",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя (UUID)",
                        "name": "userId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Название сервиса",
                        "name": "serviceName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Сумма всех подписок",
                        "schema": {
                            "$ref": "#/definitions/response.TotalPriceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerError"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}": {
            "get": {
                "description": "Возвращает данные одной подписки по её идентификатору",
                "tags": [
                    "subscriptions"
                ],
                "summary": "Получить подписку по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID подписки",
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/response.SubscriptionView"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerError"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/delete": {
            "delete": {
                "description": "Удаляет подписку по ID",
                "tags": [
                    "subscriptions"
                ],
                "summary": "Удалить подписку",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID подписки",
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/response.DeletedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerError"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/update": {
            "put": {
                "description": "Обновляет информацию о подписке по её ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Обновить подписку",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID подписки",
                        "name": "subscriptionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления подписки",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/response.UpdatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BadRequestError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.InternalServerError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.SubscriptionRequest": {
            "type": "object",
            "required": [
                "price",
                "service_name",
                "start_date",
                "user_id"
            ],
            "properties": {
                "end_date": {
                    "type": "string",
                    "example": "12-2025"
                },
                "price": {
                    "type": "integer",
                    "example": 1000
                },
                "service_name": {
                    "type": "string",
                    "example": "Yandex Plus"
                },
                "start_date": {
                    "type": "string",
                    "example": "06-2025"
                },
                "user_id": {
                    "type": "string",
                    "example": "bac8ff49-1681-445c-941b-c000f2fc8ac0"
                }
            }
        },
        "response.BadRequestError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Bad Request"
                }
            }
        },
        "response.CreatedResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string",
                    "example": "created"
                }
            }
        },
        "response.DeletedResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string",
                    "example": "deleted"
                }
            }
        },
        "response.InternalServerError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Internal Server Error"
                }
            }
        },
        "response.NotFoundError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Not Found"
                }
            }
        },
        "response.SubscriptionListResponse": {
            "type": "object",
            "properties": {
                "subcriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SubscriptionResponse"
                    }
                }
            }
        },
        "response.SubscriptionResponse": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string",
                    "example": "03-2025"
                },
                "id": {
                    "type": "integer",
                    "example": 1234
                },
                "price": {
                    "type": "integer",
                    "example": 1200
                },
                "service_name": {
                    "type": "string",
                    "example": "Netflix"
                },
                "start_date": {
                    "type": "string",
                    "example": "02-2025"
                },
                "user_id": {
                    "type": "string",
                    "example": "bac8ff49-1681-445c-941b-c000f2fc8ac0"
                }
            }
        },
        "response.SubscriptionView": {
            "type": "object",
            "properties": {
                "subscription": {
                    "$ref": "#/definitions/response.SubscriptionResponse"
                }
            }
        },
        "response.TotalPriceResponse": {
            "type": "object",
            "properties": {
                "total_price": {
                    "type": "integer",
                    "example": 12345
                }
            }
        },
        "response.UpdatedResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string",
                    "example": "updated"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Сервис работы с информацией о подписках",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
